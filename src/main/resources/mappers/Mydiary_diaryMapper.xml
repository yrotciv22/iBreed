<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ibreed_project.dao.IMydiary_diaryDAO">

    <!-- ResultMap 정의 -->
    <resultMap id="DiaryResultMap" type="com.ibreed_project.model.Mydiary_diaryVO">
        <id property="diaryPostId" column="diary_post_id"/>
        <result property="diaryId" column="diary_id"/>
        <result property="diaryTitle" column="diary_title"/>
        <result property="diaryContent" column="diary_content"/>
        <result property="diaryFile" column="diary_file"/>
        <result property="diaryCreate" column="diary_create"/>
        <result property="diaryUpdate" column="diary_update"/>
        <result property="diaryViews" column="diary_views"/>
        <result property="diaryLike" column="diary_like"/>
        <result property="diaryUploadStatus" column="diary_upload_status"/>
        <result property="diaryWeather" column="diary_weather"/>
        <result property="diaryTag" column="diary_tag"/>
        <result property="diaryPublic" column="diary_public"/>
        <result property="diaryCategory" column="diary_category"/>
        <result property="commentCount" column="comment_count"/>
        <result property="isDeleted" column="is_deleted"/>
         <result property="userId" column="user_id"/>
         <result property="isLiked" column="isLiked"/>
    </resultMap>
	
    <!-- INSERT 쿼리 -->
    <insert id="insertDiary" parameterType="com.ibreed_project.model.Mydiary_diaryVO">
    INSERT INTO diaryboard (
        diary_id, diary_title, diary_content, diary_file
       , diary_views, diary_like, diary_upload_status, 
          diary_public, diary_category, comment_count, 
        is_deleted, user_id
    )
    SELECT
        d.diary_id, #{diaryTitle}, #{diaryContent}, #{diaryFile}, 0,0
       ,1, #{diaryPublic}, #{diaryCategory}, 0, 0, #{userId}
    FROM
        diary d
    WHERE
        d.user_id = #{userId}
</insert>

    <!-- SELECT 쿼리 -->
    <select id="getDiaryById" resultMap="DiaryResultMap" parameterType="int">
        SELECT * FROM diaryboard 
        WHERE diary_post_id = #{diaryPostId} AND is_deleted = FALSE
        
    </select>
    
    
    <!--일기리스트가져오는 쿼리문  페이지네이션추가함-->
	<select id="getDiaryListByUserId"  resultMap="DiaryResultMap" parameterType="map" >
	    SELECT db.diary_post_id, db.diary_id, db.diary_title, db.diary_content, db.diary_create, 
	    			db.diary_category, db.diary_views, db.diary_public,d.user_id
	    FROM diaryboard db
	    INNER JOIN diary d ON db.diary_id = d.diary_id
	    WHERE d.user_id = #{userId}
	    ORDER BY db.diary_create DESC
	    LIMIT #{offset}, #{size}
	</select>
	
	<!-- 일기 개수 가져오기-페이지네이션에필요 -->
	<select id="getTotalDiaryCountByUserId" resultType="java.lang.Integer" parameterType="java.lang.String">
	    SELECT COUNT(*)
	    FROM diaryboard db
	    INNER JOIN diary d ON db.diary_id = d.diary_id
	    WHERE d.user_id = #{userId}
	</select>
	<!--공개여부  -->

	<select id="getDiaryListByUserIdAndVisibility" parameterType="hashmap"  resultMap="DiaryResultMap">
	    SELECT *
	    FROM diaryboard  	 
	    WHERE 
	    <choose>
  				<when test="diary_id !=0">
  					user_id = #{userId}	
  					 AND diary_id = #{diary_id}    
  				</when>
  				<when test="diary_id ==0">
  					user_id = #{userId}	
  					 AND diary_public != '비공개'
  				</when>
  			</choose>
  		
	
	    ORDER BY diary_post_id DESC
	    LIMIT #{offset}, #{size}
</select>

    <!-- 일기UPDATE 쿼리 -->
     <update id="updateDiary" parameterType="com.ibreed_project.model.Mydiary_diaryVO">
        UPDATE diaryboard
        SET  diary_title = #{diaryTitle},
	            diary_content = #{diaryContent},
	            diary_file = #{diaryFile},
	            diary_public = #{diaryPublic},
	            diary_category = #{diaryCategory}
        WHERE diary_post_id = #{diaryPostId}
    </update>
    <!--  일기삭제]-->
    <delete id="deleteDiary" parameterType="int">
        DELETE FROM diaryboard WHERE diary_post_id = #{diaryPostId}
    </delete>
    
	<!--조회수 증가  -->
	<update id="incrementViewCount">
    UPDATE diaryboard 
    SET diary_views = diary_views + 1 
    WHERE diary_post_id = #{diaryPostId}
</update>
 <!-- 좋아요 확인 -->
    <select id="isLiked" resultType="int">
        SELECT COUNT(*) FROM diary_like WHERE user_id = #{userId} AND diary_post_id = #{diaryPostId}
    </select>

    <!-- 좋아요 수 증가 -->
    <update id="incrementLikeCount">
        UPDATE diaryboard SET diary_like = diary_like + 1 WHERE diary_post_id = #{diaryPostId}
    </update>

    <!-- 좋아요 수 감소 -->
    <update id="decrementLikeCount">
        UPDATE diaryboard SET diary_like = diary_like - 1 WHERE diary_post_id = #{diaryPostId}
    </update>

    <!-- 현재 좋아요 수 가져오기 -->
    <select id="getLikeCount" resultType="int">
        SELECT diary_like FROM diaryboard WHERE diary_post_id = #{diaryPostId}
    </select>

    <!-- 유저 좋아요 추가 -->
    <insert id="addUserLike">
        INSERT INTO diary_like (user_id, diary_post_id, created_at) VALUES (#{userId}, #{diaryPostId}, NOW())
    </insert>

    <!-- 유저 좋아요 삭제 -->
    
    <delete id="removeUserLike">
        DELETE FROM diary_like WHERE user_id = #{userId} AND diary_post_id = #{diaryPostId}
    </delete>

	<select id="getDiaryCount" resultType="int">
		SELECT count(*) FROM diaryboard WHERE diary_id=(SELECT diary_id FROM diary WHERE user_id=#{user_id})
		<!-- SELECT COALESCE(
	    (SELECT COUNT(*) FROM diaryboard WHERE diary_id IN (SELECT diary_id FROM diary WHERE user_id = #{user_id})), 0)
	    AS count_result; -->
	</select>

</mapper>

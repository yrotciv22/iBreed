<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ibreed_project.dao.ICommunityDAO">
	  <resultMap id="postResultMap" type="com.ibreed_project.model.PostVO">
	        <id property="postId" column="post_id" />
	        <result property="postTitle" column="post_title" />
	        <result property="postContent" column="post_content" />
	        <result property="postCreate" column="post_create" />
	        <result property="postUpdate" column="post_update" />
	        <result property="postCount" column="post_count" />
	        <result property="postHeading" column="post_heading" />
	        <result property="userId" column="user_id" />
	        <result property="postStatus" column="post_status" />
	        <result property="boardId2" column="board_id2" />
	        <result property="postImage" column="post_image" />
	        <result property="postVideo" column="post_video" />
	        <result property="postUrl" column="post_url" />
	        <result property="postLikes" column="likes" />
	        <result property="profileImage" column="user_profile_image" />
	    </resultMap>

    <!-- 인기글 불러오기-->
    <select id="selectPopularPosts" resultMap="postResultMap">
        SELECT * FROM post WHERE post_status = 1 ORDER BY post_count DESC
    </select>

    <!-- 최신글 불러오기 -->
    <select id="selectRecentPosts" resultMap="postResultMap">
        SELECT * FROM post WHERE post_status = 1 ORDER BY post_create DESC
    </select>

    <!-- 특정 게시판의 게시글 불러오기 -->
    <select id="selectPostsByBoardId" parameterType="int" resultMap="postResultMap">
        SELECT * FROM post WHERE board_id2 = #{boardId} AND post_status = 1 ORDER BY post_create DESC 
    </select>

	<!-- 10개 리밋 -->
	<select id="selectPopularPostsWithLimit" resultMap="postResultMap">
        SELECT * FROM post WHERE post_status = 1 ORDER BY post_count DESC LIMIT 10
	</select>
	<select id="selectRecentPostsWithLimit" resultMap="postResultMap">
        SELECT * FROM post WHERE post_status = 1 ORDER BY post_create DESC LIMIT 10
	</select>
	<select id="selectPostsByBoardIdWithLimit" parameterType="int" resultMap="postResultMap">
        SELECT * FROM post WHERE board_id2 = #{boardId} AND post_status = 1 ORDER BY post_create DESC LIMIT 10
	</select>
	
	<!-- 공지사항 -->
	<select id="selectAllNotices" resultMap="postResultMap">
        SELECT * FROM post WHERE is_notice = 1 ORDER BY post_create DESC
    </select>
	
	<!-- 페이지네이션 처리된 게시글 가져오기 -->
	<select id="selectPostsByBoardIdWithPagination" parameterType="map" resultMap="postResultMap">
        SELECT *
        FROM post
        WHERE board_id2 = #{boardId}
        ORDER BY post_create DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

	<!-- 총 게시글 수 계산 -->
	<select id="countPostsByBoardId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM post
        WHERE board_id2 = #{boardId}
    </select>
    <!-- 글 등록 -->
    <insert id="insertPost" parameterType="com.ibreed_project.model.PostVO">
    INSERT INTO post (post_id, post_title, post_content, post_create, post_count, post_heading, user_id, post_status, board_id2, post_image, post_video, post_url, likes)
    VALUES (#{postId}, #{postTitle}, #{postContent}, NOW(), #{postCount}, #{postHeading}, #{userId}, #{postStatus}, #{boardId2}, #{postImage}, #{postVideo}, #{postUrl}, 0);
	</insert>
	
	<!--상세게시물  -->
    <select id="selectPostById" parameterType="int" resultMap="postResultMap">
    SELECT * 
    FROM post 
    WHERE post_id = #{postId}
	</select>
	<!--닉네임 조회  -->
    <select id="findNicknameByUserId" resultType="String">
    SELECT user_nickname
    FROM user
    WHERE user_id = #{userId}
	</select>
	<!-- 유저테이블에서 프로필이미지 가져오기 -->
	<select id="getAuthorProfileImage" parameterType="int" resultType="String">
    SELECT u.user_profile_image
    FROM post p
    JOIN user u ON p.user_id = u.user_id
    WHERE p.post_id = #{postId}
	</select>

	 <!--  게시글 삭제]-->
    <delete id="deletePost" parameterType="int">
        DELETE FROM post WHERE post_id = #{postId}
    </delete>
	
	
	  <!-- 게시글 수정 -->
    <update id="updatePost" parameterType="com.ibreed_project.model.PostVO">
        UPDATE post
        SET post_title = #{postTitle},
            post_content = #{postContent},
            post_heading = #{postHeading},
            post_update = NOW() -- 수정 날짜 업데이트
        WHERE post_id = #{postId}
    </update>
	<!-- 조회수 증가 -->
	<update id="increasePostViewCount" parameterType="int">
	    UPDATE post
	    SET post_count = post_count + 1
	    WHERE post_id = #{postId}
	</update>
	<!--좋아요 상태 확인  -->
	<select id="isPostLikedByUser" resultType="int">
	    SELECT COUNT(*) > 0 
	    FROM likes
	    WHERE like_post_id = #{postId} 
	    AND like_click_id = #{userId}
	</select>
	<!--좋아요 추가  -->
	<insert id="likePost">
	    INSERT INTO likes (like_post_id, like_click_id, like_create, post_id2)
	    VALUES (#{postId}, #{userId}, NOW(), #{postId})
	</insert>
	<!--좋아요 취소  -->
	<delete id="unlikePost">
    DELETE FROM likes
    WHERE like_post_id = #{postId}
    AND like_click_id = #{userId}
	</delete>
	<!--총 좋아요수   -->
	<select id="getLikeCount" resultType="int">
    SELECT COUNT(*) 
    FROM likes
    WHERE like_post_id = #{postId}
	</select>
	<!--게시글 좋아요 수 증가  -->
	<update id="incrementPostLikeCount">
    UPDATE post 
    SET likes = likes + 1 
    WHERE post_id = #{postId}
	</update>
	<!--게시글 좋아요 수 감소  -->
	<update id="decrementPostLikeCount">
	    UPDATE post 
	     SET likes = CASE WHEN likes > 0 THEN likes - 1 ELSE 0 END
	    WHERE post_id = #{postId}
	</update>
<!--검색창  -->
<select id="searchPostsByKeyword" resultMap="postResultMap">
    SELECT * FROM post
    WHERE post_title LIKE CONCAT('%', #{keyword}, '%')
    OR post_content LIKE CONCAT('%', #{keyword}, '%')
</select>
	
</mapper>
